//created on: 21 nov 2023
package com.rules

//list any import classes here.

import ontology.objetos.*;
import ontology.objetos.intervalos.*;
import ontology.objetos.segmentos.*;
import ontology.objetos.ondas.*;
import ontology.objetos.complejos.*;


//declare any global variables here




rule "Bradicardia"
	agenda-group "Enfermedades"
    when
        $r: RitmoCardiaco(ppm < 60)
    not Enfermedad(nombre == "Bradicardia")
    then
        insert(new Enfermedad("Bradicardia"));
        insert(new Patron("** Low Heart Rate present (Bradicardia) cycle: NA"));

end

rule "Taquicardia"
	agenda-group "Enfermedades"
    when
        $r: RitmoCardiaco(ppm > 100)
    not Enfermedad(nombre == "Taquicardia")
    then
        insert(new Enfermedad("Taquicardia"));
        insert(new Patron("** Hight Heart Rate present (Taquicardia) cycle: NA"));

end
rule "Hipocalcemia"
    agenda-group "Enfermedades"
    when
        $segST: SegmentoST(duracion > 150)
        $intQT: IntervaloQT(duracion > 440 , $intQT.getNumCiclo() == $segST.getNumCiclo())
    not Enfermedad(nombre == "Hipocalcemia")
    then
        insert(new Enfermedad("Hipocalcemia"));
        insert(new Patron("** long ST present (Hipocalcemia) cycle : " + $segST.getNumCiclo()));
        insert(new Patron("** long QT present (Hipocalcemia) cycle : " + $intQT.getNumCiclo()));

end

rule "Hipopotasemia"
    agenda-group "Enfermedades"
    when
        $ondT: OndaT(pico < 0.2)
    not Enfermedad(nombre == "Hipopotasemia")
    then
        insert(new Enfermedad("Hipopotasemia"));
        insert(new Patron("** negative T wave present (Hipopotasemia) cycle: " + $ondT.getNumCiclo()));

end
rule "Infarto agudo de miocardio"
    agenda-group "Enfermedades"
    when
        $ondT: OndaT(pico > 1)
        not Enfermedad(nombre == "IAM")
    then
        insert(new Enfermedad("IAM"));
        insert(new Patron("** large T wave present (IAM) cycle: " + $ondT.getNumCiclo()));

end
rule "Isquemia coronaria"
    agenda-group "Enfermedades"
    when
        $ondT: OndaT(pico < 0.2)
    not Enfermedad(nombre == "isq-coronaria")
    then
        insert(new Enfermedad("isq-coronaria"));
        insert(new Patron("** negative T wave present (isq-coronaria) cycle: " + $ondT.getNumCiclo()));

end
rule "contraciones ventriculares prematuras"
    agenda-group "Enfermedades"
    when
        $comQRS: ComplejoQRS(duracion > 100)
    not Enfermedad(nombre == "contraciones ventriculares prematuras")
    then
        insert(new Enfermedad("contraciones ventriculares prematuras"));
        insert(new Patron("** long QRS present (Contraccion ventricular prematura) " + $comQRS.getNumCiclo()));

end

rule "crea Diagnostico"
    agenda-group "Diagnostico"
    when
        $enf: Enfermedad()
        not Diagnostico(nombre == "dig")
    then
        insert(new Diagnostico("dig"));

end
rule "agrega Enfermedades"
    agenda-group "Diagnostico"
    salience -10
    when
        $enf: Enfermedad()
        $dig: Diagnostico()
    then
        $dig.setEnfermedades($enf.getNombre());
        
end
rule "agrega patrones"
    agenda-group "Diagnostico"
    salience -20
    when
        $patt: Patron()
        $dig: Diagnostico()
    then
        $dig.setPatrones($patt.getNombre());

end
rule "muestra Diagnostico"
    agenda-group "Diagnostico"
    salience -30
    when
        $dig: Diagnostico()
    then
        System.out.println($dig.getEnfermedades());
        System.out.println($dig.getPatrones());

end